<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | ZoOL => Blog]]></title>
  <link href="http://zool.me/categories/ruby/atom.xml" rel="self"/>
  <link href="http://zool.me/"/>
  <updated>2012-03-30T15:49:16+08:00</updated>
  <id>http://zool.me/</id>
  <author>
    <name><![CDATA[ZoOL]]></name>
    <email><![CDATA[zhooul@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[去除invaild gemspec警告]]></title>
    <link href="http://zool.me/ruby/2012/03/30/remove-invaild-gemspec-warning"/>
    <updated>2012-03-30T15:22:00+08:00</updated>
    <id>http://zool.me/ruby/2012/03/30/remove-invaild-gemspec-warning</id>
    <content type="html"><![CDATA[<p>在某些版本gems里，由于spac日期解析的问题， 会有一些Invaild gemspec的警告</p>

<p><code>
Invalid gemspec in [/Users/ZoOL/.rvm/gems/ruby-1.9.3-p0/specifications/oauth2-0.5.2.gemspec]: invalid date format in specification: "2012-01-04 00:00:00.000000000Z"
</code></p>

<p>用手工去除gemspec文件， 比较麻烦
另一种是直接用代码实现</p>

<p><code>
perl -p -i -e 's/ 00:00:00.000000000Z//' ~/.rvm/gems/*/specifications/*.gemspec
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复安装gems时Errno::ETIMEDOUT: Operation timed out - connect(2)的错误]]></title>
    <link href="http://zool.me/ruby/2011/02/28/When-a-repair-installation-of-gems-Errno%3A%3A-ETIMEDOUT%3A-Operation-timed-out---connect-%282%29-of-the-error"/>
    <updated>2011-02-28T00:00:00+08:00</updated>
    <id>http://zool.me/ruby/2011/02/28/When-a-repair-installation-of-gems-Errno::-ETIMEDOUT:-Operation-timed-out---connect-(2)-of-the-error</id>
    <content type="html"><![CDATA[<p>这两天更新gems出现下面的错误
``` ruby
➜  ~  gem install rails    <br/>
ERROR:  Could not find a valid gem 'rails' (>= 0) in any repository
ERROR:  While executing gem ... (Gem::RemoteFetcher::FetchError)</p>

<pre><code>Errno::ETIMEDOUT: Connection timed out - connect(2) (http://rubygems.org/latest_specs.4.8.gz)
</code></pre>

<p>```</p>

<p>经检查和GFW无关，是rubygems的DNS
调整问题</p>

<h1>问题解决的最好方法方法</h1>

<p>使用google的DNS
8.8.8.8 / 8.8.4.4</p>

<h1>另一种解决方式</h1>

<p>修改rubygems的source源
``` ruby</p>

<h1>删除原有gem source</h1>

<p>gem source -r http://rubygems.org/
gem source -r http://production.s3.rubygems.org/</p>

<h1>增加新source源</h1>

<p>gem source -a  http://production.s3.rubygems.org.s3.amazonaws.com/
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[建立sproutcore应用]]></title>
    <link href="http://zool.me/ruby/2011/02/22/Application-to-establish-sproutcore"/>
    <updated>2011-02-22T00:00:00+08:00</updated>
    <id>http://zool.me/ruby/2011/02/22/Application-to-establish-sproutcore</id>
    <content type="html"><![CDATA[<p>sproutcore是通过rubygems来安装的
<code>bash
gem install sproutcore
</code></p>

<p>建立应用
<code>bash
sc-init HelloWorld
</code></p>

<p>启动应用
<code>bash
cd HelloWorld
sc-server
</code></p>

<p>便会通过启动thin在locahost:4020提供应用服务</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby中去除字符串空格的方法]]></title>
    <link href="http://zool.me/ruby/2011/01/25/ruby-string-remove-space-methods"/>
    <updated>2011-01-25T00:00:00+08:00</updated>
    <id>http://zool.me/ruby/2011/01/25/ruby-string-remove-space-methods</id>
    <content type="html"><![CDATA[<p>使用 String#strip方法,去除所有空格
<code>ruby
"    hello    ".strip   #=&gt; "hello"
"\tgoodbye\r\n".strip   #=&gt; "goodbye"
</code></p>

<p>另外lstrip和rstrip分别去除字符串左右两端的空格
<code>ruby
"  hello  ".lstrip   #=&gt; "hello  "
"hello".lstrip       #=&gt; "hello"
"  hello  ".rstrip   #=&gt; "  hello"
"hello".rstrip       #=&gt; "hello"
</code></p>

<p>上述方法是返回字符串的copy,如要改变原字符串对象，使用 String#strip!, String#lstrip!, String#rstrip!。 如果对象没有改变则返回nil
<code>ruby
"hello".rstrip!      #=&gt; nil
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby-新年快乐]]></title>
    <link href="http://zool.me/ruby/2010/12/29/ruby-Happy-New-Year"/>
    <updated>2010-12-29T00:00:00+08:00</updated>
    <id>http://zool.me/ruby/2010/12/29/ruby-Happy-New-Year</id>
    <content type="html"><![CDATA[<p>根据网上的源码改编</p>

<p><code>bash
 ruby -e "((1..20).to_a+[6]*4).each{|i|puts ('#'*i*2).center(80)};puts;puts 'Happy New Year'.center(80)"
</code></p>

<p>关键是center方法
<code>bash
"Happy New Year".center(80)
</code>
就是将字符串在80个字符的长度内居中</p>
]]></content>
  </entry>
  
</feed>
